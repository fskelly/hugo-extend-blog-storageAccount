<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post copies on Fletcher&#39;s Cloud Journey</title>
    <link>https://cloud.fskelly.com/post-copy/</link>
    <description>Recent content in Post copies on Fletcher&#39;s Cloud Journey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 Aug 2021 05:58:18 +0200</lastBuildDate><atom:link href="https://cloud.fskelly.com/post-copy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure Resource Group Enterprise Scale Landing Zone queries</title>
      <link>https://cloud.fskelly.com/post-copy/2021/arg-mg-query-quick-post/</link>
      <pubDate>Wed, 25 Aug 2021 05:58:18 +0200</pubDate>
      
      <guid>https://cloud.fskelly.com/post-copy/2021/arg-mg-query-quick-post/</guid>
      <description>Azure Resource Graph Examples  Azure Resource Graph   --This is just a quick post. I am slowly working on building a collection of Resource Graph Queries - they can be found here and will grow over time. It just takes some time to build these.
They will be broken down into a folder structure based upon the Critical Design Areas of Enterprise Scale Landing Zone
 folderStructure</description>
    </item>
    
    <item>
      <title>Bicep Troubleshooting</title>
      <link>https://cloud.fskelly.com/post-copy/2021/bicep-troubleshooting/</link>
      <pubDate>Fri, 02 Jul 2021 05:40:16 +0200</pubDate>
      
      <guid>https://cloud.fskelly.com/post-copy/2021/bicep-troubleshooting/</guid>
      <description>Some basic &amp;ldquo;troubleshooting&amp;rdquo; with Azure Bicep So, let me start with this. The team and the community behind Azure Bicep are amazing. There are some great examples here. I often use these as a base and the rip apart or add to meet my needs, you do NOT need to start from ground zero. ðŸ˜„
When you are deploying bicep templates you command will look something like this.
$bicepFile = &amp;#34;.</description>
    </item>
    
    <item>
      <title>Cli List Locations and Peers</title>
      <link>https://cloud.fskelly.com/post-copy/2021/cli-list-locations-and-peers/</link>
      <pubDate>Wed, 05 May 2021 07:03:02 +0200</pubDate>
      
      <guid>https://cloud.fskelly.com/post-copy/2021/cli-list-locations-and-peers/</guid>
      <description>How to use the Azure CLI to list Azure Locations and their peers So this will be a &amp;ldquo;quick post&amp;rdquo; that shows some great functionality within the Azure CLI with az account list-locations. With this command you can expect some output like below, you actually get a lot of content back.
{ &amp;#34;displayName&amp;#34;: &amp;#34;Brazil Southeast&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;/subscriptions/949ef534-07f5-4138-8b79-aae16a71310c/locations/brazilsoutheast&amp;#34;, &amp;#34;metadata&amp;#34;: { &amp;#34;geographyGroup&amp;#34;: &amp;#34;South America&amp;#34;, &amp;#34;latitude&amp;#34;: &amp;#34;-22.90278&amp;#34;, &amp;#34;longitude&amp;#34;: &amp;#34;-43.2075&amp;#34;, &amp;#34;pairedRegion&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;/subscriptions/949ef534-07f5-4138-8b79-aae16a71310c/locations/brazilsouth&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;brazilsouth&amp;#34;, &amp;#34;subscriptionId&amp;#34;: null } ], &amp;#34;physicalLocation&amp;#34;: &amp;#34;Rio&amp;#34;, &amp;#34;regionCategory&amp;#34;: &amp;#34;Other&amp;#34;, &amp;#34;regionType&amp;#34;: &amp;#34;Physical&amp;#34; }, &amp;#34;name&amp;#34;: &amp;#34;brazilsoutheast&amp;#34;, &amp;#34;regionalDisplayName&amp;#34;: &amp;#34;(South America) Brazil Southeast&amp;#34;, &amp;#34;subscriptionId&amp;#34;: null } If you look at some of the examples, you will also see some &amp;ldquo;logical&amp;rdquo; locations, example below, there is a way of adding a query to remove these to display only &amp;ldquo;physical&amp;rdquo; locations.</description>
    </item>
    
    <item>
      <title>Azure Rest Api Postman Basics</title>
      <link>https://cloud.fskelly.com/post-copy/2021/azure-rest-api-postman-basics/</link>
      <pubDate>Wed, 14 Apr 2021 09:02:18 +0200</pubDate>
      
      <guid>https://cloud.fskelly.com/post-copy/2021/azure-rest-api-postman-basics/</guid>
      <description>Absolute basics with Azure and PostMan Getting started Many of the articles I have found online with regards to the Azure REST API assume a fair level of familiarity with Azure which can be a good and bad thing. You see the Azure Portal makes interacting with the Azure REST API very easy as a lot of the &amp;ldquo;prerequisite&amp;rdquo; work is done in the portal as part of the process. For this blog post we will work on something quite basic, &amp;ldquo;Create a Virtual Machine&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Expiring Keys and Secrets within Azure Key Vault</title>
      <link>https://cloud.fskelly.com/post-copy/2021/expiring-keys-azure-key-vault/</link>
      <pubDate>Mon, 18 Jan 2021 07:06:03 +0200</pubDate>
      
      <guid>https://cloud.fskelly.com/post-copy/2021/expiring-keys-azure-key-vault/</guid>
      <description>I was working with a customer the other day and a fairly simple ask came up, I however could not find an immediate answer within the portal.
How do I check for expiring keys within the Azure KeyVault?
Now being a PowerShell person, I never gave this much thought as for most tasks or actions I perform on the Azure Platform is done through PowerShell, AP, or CLI. So easy enough, however, not everyone knows how to do this in PowerShell.</description>
    </item>
    
    <item>
      <title>Azure Ghost Cms and Cdn</title>
      <link>https://cloud.fskelly.com/post-copy/2021/azure-ghost-cms-and-cdn/</link>
      <pubDate>Mon, 11 Jan 2021 07:00:18 +0200</pubDate>
      
      <guid>https://cloud.fskelly.com/post-copy/2021/azure-ghost-cms-and-cdn/</guid>
      <description>I moved my blog onto HUGO. Not everyone would want to do this necessarily, there is a bit of a learning curve, part of the reason I DID IT :). However there are other platforms you can use and still add more functionality if you want.
You can use Ghost and add an Azure CDN. This is what this blog post will cover.
There are some very clever people out there that have made this very easy for you.</description>
    </item>
    
    <item>
      <title>My New Blog Home with Azure Static Web App</title>
      <link>https://cloud.fskelly.com/post-copy/2021/my-new-blog-home/</link>
      <pubDate>Tue, 05 Jan 2021 15:57:04 +0200</pubDate>
      
      <guid>https://cloud.fskelly.com/post-copy/2021/my-new-blog-home/</guid>
      <description>So, I have spent the last few days / weeks deciding the best way to host a blog. Now I have a decidedly &amp;ldquo;split personality&amp;rdquo;. By this I mean I like to segregate my work and personal hobbies. This can be quite beneficial as this allows me to test a few things.
A few key decisions  Must be version controlled - good practice and forces me to get more familiar with git.</description>
    </item>
    
  </channel>
</rss>
